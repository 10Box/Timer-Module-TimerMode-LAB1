

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Oct 21 17:11:47 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 22/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     000E                     _TMR1	set	14
   168     0060                     _TMR1IF	set	96
   169     0080                     _TMR1ON	set	128
   170     0085                     _T1CKPS1	set	133
   171     0084                     _T1CKPS0	set	132
   172     0081                     _TMR1CS	set	129
   173     005F                     _GIE	set	95
   174     005E                     _PEIE	set	94
   175     0030                     _RB0	set	48
   176     0460                     _TMR1IE	set	1120
   177     0430                     _TRISB0	set	1072
   178                           
   179                           	psect	cinit
   180     0011                     start_initialization:	
   181                           ; #config settings
   182                           
   183     0011                     __initialization:
   184                           
   185                           ; Clear objects allocated to COMMON
   186     0011  01F3               	clrf	__pbssCOMMON& (0+127)
   187     0012                     end_of_initialization:	
   188                           ;End of C runtime variable initialization code
   189                           
   190     0012                     __end_of__initialization:
   191     0012  0183               	clrf	3
   192     0013  120A  118A  2837   	ljmp	_main	;jump to C main() function
   193                           
   194                           	psect	bssCOMMON
   195     0073                     __pbssCOMMON:
   196     0073                     _counter:
   197     0073                     	ds	1
   198                           
   199                           	psect	cstackCOMMON
   200     0070                     __pcstackCOMMON:
   201     0070                     ?_main:
   202     0070                     ?_ISR:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0070                     ??_ISR:	
   206                           ; 1 bytes @ 0x0
   207                           
   208                           
   209                           ; 1 bytes @ 0x0
   210     0070                     	ds	3
   211     0073                     ??_main:
   212                           
   213                           	psect	maintext
   214     0037                     __pmaintext:	
   215                           ; 1 bytes @ 0x3
   216 ;;
   217 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   218 ;;
   219 ;; *************** function _main *****************
   220 ;; Defined at:
   221 ;;		line 6 in file "main.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;		None
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		None
   230 ;; Tracked objects:
   231 ;;		On entry : B00/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   235 ;;      Params:         0       0       0       0       0
   236 ;;      Locals:         0       0       0       0       0
   237 ;;      Temps:          0       0       0       0       0
   238 ;;      Totals:         0       0       0       0       0
   239 ;;Total ram usage:        0 bytes
   240 ;; Hardware stack levels required when called: 1
   241 ;; This function calls:
   242 ;;		Nothing
   243 ;; This function is called by:
   244 ;;		Startup code after reset
   245 ;; This function uses a non-reentrant model
   246 ;;
   247                           
   248     0037                     _main:	
   249                           ;psect for function _main
   250                           
   251     0037                     l583:	
   252                           ;incstack = 0
   253                           ; Regs used in _main: []
   254                           
   255                           
   256                           ;main.c: 7:     TRISB0 = 0;
   257     0037  1683               	bsf	3,5	;RP0=1, select bank1
   258     0038  1303               	bcf	3,6	;RP1=0, select bank1
   259     0039  1006               	bcf	6,0	;volatile
   260                           
   261                           ;main.c: 8:     RB0 = 0;
   262     003A  1283               	bcf	3,5	;RP0=0, select bank0
   263     003B  1303               	bcf	3,6	;RP1=0, select bank0
   264     003C  1006               	bcf	6,0	;volatile
   265                           
   266                           ;main.c: 9:     TMR1IE = 1;
   267     003D  1683               	bsf	3,5	;RP0=1, select bank1
   268     003E  1303               	bcf	3,6	;RP1=0, select bank1
   269     003F  140C               	bsf	12,0	;volatile
   270                           
   271                           ;main.c: 10:             PEIE = 1;
   272     0040  170B               	bsf	11,6	;volatile
   273                           
   274                           ;main.c: 11:             GIE = 1;
   275     0041  178B               	bsf	11,7	;volatile
   276                           
   277                           ;main.c: 19:     TMR1 = 15536;
   278     0042  303C               	movlw	60
   279     0043  1283               	bcf	3,5	;RP0=0, select bank0
   280     0044  1303               	bcf	3,6	;RP1=0, select bank0
   281     0045  008F               	movwf	15	;volatile
   282     0046  30B0               	movlw	176
   283     0047  008E               	movwf	14	;volatile
   284                           
   285                           ;main.c: 20:     TMR1CS = 0;
   286     0048  1090               	bcf	16,1	;volatile
   287                           
   288                           ;main.c: 21:     T1CKPS0 = 0;
   289     0049  1210               	bcf	16,4	;volatile
   290                           
   291                           ;main.c: 22:     T1CKPS1 = 0;
   292     004A  1290               	bcf	16,5	;volatile
   293                           
   294                           ;main.c: 25:     TMR1ON = 1;
   295     004B  1410               	bsf	16,0	;volatile
   296     004C                     l29:	
   297                           ;main.c: 27:     while(1){
   298                           
   299     004C                     l30:	
   300                           ;main.c: 29:     }
   301                           
   302     004C  284C               	goto	l29
   303     004D  120A  118A  280E   	ljmp	start
   304     0050                     __end_of_main:
   305                           
   306                           	psect	text1
   307     0016                     __ptext1:	
   308 ;; *************** function _ISR *****************
   309 ;; Defined at:
   310 ;;		line 33 in file "main.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;		None
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, status,2, status,0, btemp+1
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   324 ;;      Params:         0       0       0       0       0
   325 ;;      Locals:         0       0       0       0       0
   326 ;;      Temps:          3       0       0       0       0
   327 ;;      Totals:         3       0       0       0       0
   328 ;;Total ram usage:        3 bytes
   329 ;; Hardware stack levels used: 1
   330 ;; This function calls:
   331 ;;		Nothing
   332 ;; This function is called by:
   333 ;;		Interrupt level 1
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337     0016                     _ISR:	
   338                           ;psect for function _ISR
   339                           
   340     0016                     i1l585:
   341                           
   342                           ;main.c: 34:     if(TMR1IF){
   343     0016  1283               	bcf	3,5	;RP0=0, select bank0
   344     0017  1303               	bcf	3,6	;RP1=0, select bank0
   345     0018  1C0C               	btfss	12,0	;volatile
   346     0019  281B               	goto	u1_21
   347     001A  281C               	goto	u1_20
   348     001B                     u1_21:
   349     001B  282E               	goto	i1l39
   350     001C                     u1_20:
   351     001C                     i1l587:
   352                           
   353                           ;main.c: 35:         TMR1 = 15536;
   354     001C  303C               	movlw	60
   355     001D  008F               	movwf	15	;volatile
   356     001E  30B0               	movlw	176
   357     001F  008E               	movwf	14	;volatile
   358     0020                     i1l589:
   359                           
   360                           ;main.c: 36:         counter++;
   361     0020  3001               	movlw	1
   362     0021  00FF               	movwf	btemp+1
   363     0022  087F               	movf	btemp+1,w
   364     0023  07F3               	addwf	_counter,f
   365     0024                     i1l591:
   366                           
   367                           ;main.c: 37:         if(counter == 20){
   368     0024  3014               	movlw	20
   369     0025  0673               	xorwf	_counter,w
   370     0026  1D03               	btfss	3,2
   371     0027  2829               	goto	u2_21
   372     0028  282A               	goto	u2_20
   373     0029                     u2_21:
   374     0029  282D               	goto	i1l597
   375     002A                     u2_20:
   376     002A                     i1l593:
   377                           
   378                           ;main.c: 38:             RB0 = ~RB0;
   379     002A  3001               	movlw	1
   380     002B  0686               	xorwf	6,f
   381     002C                     i1l595:
   382                           
   383                           ;main.c: 39:             counter = 0;
   384     002C  01F3               	clrf	_counter
   385     002D                     i1l597:
   386                           
   387                           ;main.c: 41:         TMR1IF = 0;
   388     002D  100C               	bcf	12,0	;volatile
   389     002E                     i1l39:
   390     002E  0872               	movf	??_ISR+2,w
   391     002F  00FF               	movwf	btemp+1
   392     0030  0871               	movf	??_ISR+1,w
   393     0031  008A               	movwf	10
   394     0032  0E70               	swapf	??_ISR,w
   395     0033  0083               	movwf	3
   396     0034  0EFE               	swapf	btemp,f
   397     0035  0E7E               	swapf	btemp,w
   398     0036  0009               	retfie
   399     0037                     __end_of_ISR:
   400     007E                     btemp	set	126	;btemp
   401     007E                     wtemp0	set	126
   402                           
   403                           	psect	intentry
   404     0004                     __pintentry:	
   405                           ;incstack = 0
   406                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   407                           
   408     0004                     interrupt_function:
   409     007E                     saved_w	set	btemp
   410     0004  00FE               	movwf	btemp
   411     0005  0E03               	swapf	3,w
   412     0006  00F0               	movwf	??_ISR
   413     0007  080A               	movf	10,w
   414     0008  00F1               	movwf	??_ISR+1
   415     0009  087F               	movf	btemp+1,w
   416     000A  00F2               	movwf	??_ISR+2
   417     000B  120A  118A  2816   	ljmp	_ISR
   418                           
   419                           	psect	config
   420                           
   421                           ;Config register CONFIG @ 0x2007
   422                           ;	Oscillator Selection bits
   423                           ;	FOSC = XT, XT oscillator
   424                           ;	Watchdog Timer Enable bit
   425                           ;	WDTE = OFF, WDT disabled
   426                           ;	Power-up Timer Enable bit
   427                           ;	PWRTE = ON, PWRT enabled
   428                           ;	Brown-out Reset Enable bit
   429                           ;	BOREN = ON, BOR enabled
   430                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   431                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   432                           ;	Data EEPROM Memory Code Protection bit
   433                           ;	CPD = OFF, Data EEPROM code protection off
   434                           ;	Flash Program Memory Write Enable bits
   435                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   436                           ;	In-Circuit Debugger Mode bit
   437                           ;	DEBUG = 0x1, unprogrammed default
   438                           ;	Flash Program Memory Code Protection bit
   439                           ;	CP = OFF, Code protection off
   440     2007                     	org	8199
   441     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Oct 21 17:11:47 2023

                     l30 004C                       l29 004C                      l583 0037  
                    _GIE 005F                      _RB0 0030                      _ISR 0016  
                   ?_ISR 0070                     _PEIE 005E                     i1l39 002E  
                   _TMR1 000E                     u1_20 001C                     u1_21 001B  
                   u2_20 002A                     u2_21 0029                     _main 0037  
                   btemp 007E                     start 000E                    ??_ISR 0070  
                  ?_main 0070                    i1l591 0024                    i1l593 002A  
                  i1l585 0016                    i1l595 002C                    i1l587 001C  
                  i1l597 002D                    i1l589 0020                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0050                   ??_main 0073                   _TMR1IE 0460  
                 _TMR1IF 0060                   _TMR1CS 0081                   _TMR1ON 0080  
                 _TRISB0 0430                   saved_w 007E  __end_of__initialization 0012  
         __pcstackCOMMON 0070               __pmaintext 0037               __pintentry 0004  
                _T1CKPS0 0084                  _T1CKPS1 0085                  __ptext1 0016  
                _counter 0073     end_of_initialization 0012      start_initialization 0011  
            __end_of_ISR 0037              __pbssCOMMON 0073                ___latbits 0002  
      interrupt_function 0004                 intlevel1 0000  
